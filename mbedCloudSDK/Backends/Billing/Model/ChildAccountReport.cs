/* 
 * mbed-billing REST API documentation for API-server
 *
 * This document contains the public REST API definitions of the mbed-billing service's API server component.
 *
 * OpenAPI spec version: 1.3.5-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace billing.Model
{
    /// <summary>
    /// ChildAccountReport
    /// </summary>
    [DataContract]
    public partial class ChildAccountReport :  IEquatable<ChildAccountReport>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChildAccountReport" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ChildAccountReport() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChildAccountReport" /> class.
        /// </summary>
        /// <param name="BillingData">BillingData (required).</param>
        /// <param name="Account">Account (required).</param>
        public ChildAccountReport(BillingData BillingData = default(BillingData), Account Account = default(Account))
        {
            // to ensure "BillingData" is required (not null)
            if (BillingData == null)
            {
                throw new InvalidDataException("BillingData is a required property for ChildAccountReport and cannot be null");
            }
            else
            {
                this.BillingData = BillingData;
            }
            // to ensure "Account" is required (not null)
            if (Account == null)
            {
                throw new InvalidDataException("Account is a required property for ChildAccountReport and cannot be null");
            }
            else
            {
                this.Account = Account;
            }
        }
        
        /// <summary>
        /// Gets or Sets BillingData
        /// </summary>
        [DataMember(Name="billing_data", EmitDefaultValue=false)]
        public BillingData BillingData { get; set; }
        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name="account", EmitDefaultValue=false)]
        public Account Account { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChildAccountReport {\n");
            sb.Append("  BillingData: ").Append(BillingData).Append("\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ChildAccountReport);
        }

        /// <summary>
        /// Returns true if ChildAccountReport instances are equal
        /// </summary>
        /// <param name="other">Instance of ChildAccountReport to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChildAccountReport other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.BillingData == other.BillingData ||
                    this.BillingData != null &&
                    this.BillingData.Equals(other.BillingData)
                ) && 
                (
                    this.Account == other.Account ||
                    this.Account != null &&
                    this.Account.Equals(other.Account)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.BillingData != null)
                    hash = hash * 59 + this.BillingData.GetHashCode();
                if (this.Account != null)
                    hash = hash * 59 + this.Account.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
