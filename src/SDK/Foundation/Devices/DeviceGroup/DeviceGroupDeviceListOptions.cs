// <auto-generated>
//
// Generated by
//                     _                        _
//   /\/\   __ _ _ __ | |__   __ _ ___ ___  ___| |_
//  /    \ / _` | '_ \| '_ \ / _` / __/ __|/ _ \ __|
// / /\/\ \ (_| | | | | | | | (_| \__ \__ \  __/ |_
// \/    \/\__,_|_| |_|_| |_|\__,_|___/___/\___|\__| v 2.0.0
//
// <copyright file="DeviceGroupDeviceListOptions.cs" company="Arm">
// Copyright (c) Arm. All rights reserved.
// </copyright>
// </auto-generated>

namespace Mbed.Cloud.Foundation
{
    using Mbed.Cloud.Common;
    using Mbed.Cloud.Common.Filters;
    using System.Collections.Generic;
    using System;

    /// <summary>
    /// DeviceGroupDeviceListOptions
    /// </summary>
    public class DeviceGroupDeviceListOptions : QueryOptions, IDeviceGroupDeviceListOptions
    {
        public DeviceGroupDeviceListOptions()
        {
            Filter = new Filter();
        }

        /// <summary>
        /// Filter object
        /// </summary>
        public Filter Filter
        {
            get;
            set;
        }

        public DeviceGroupDeviceListOptions AccountIdEqualTo(string value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions AccountIdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions AccountIdIn(params string[] value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions AccountIdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions AutoUpdateEqualTo(string value)
        {
            this.Filter.AddFilterItem("auto_update", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions AutoUpdateNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("auto_update", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrapExpirationDateIn(params string[] value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrapExpirationDateNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrapExpirationDateLessThan(string value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrapExpirationDateGreaterThan(string value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrappedTimestampIn(params string[] value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrappedTimestampNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrappedTimestampLessThan(string value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions BootstrappedTimestampGreaterThan(string value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions CaIdEqualTo(string value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions CaIdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions CaIdIn(params string[] value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions CaIdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions ConnectorExpirationDateIn(params string[] value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions ConnectorExpirationDateNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions ConnectorExpirationDateLessThan(string value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions ConnectorExpirationDateGreaterThan(string value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions CreatedAtIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions CreatedAtNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions CreatedAtLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions CreatedAtGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions DeployedStateEqualTo(string value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions DeployedStateNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions DeployedStateIn(params string[] value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions DeployedStateNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions DeploymentEqualTo(string value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions DeploymentNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions DeploymentIn(params string[] value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions DeploymentNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions DescriptionEqualTo(string value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions DescriptionNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions DescriptionIn(params string[] value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions DescriptionNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceClassEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceClassNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceClassIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceClassNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceExecutionModeEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceExecutionModeNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceExecutionModeIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceExecutionModeNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceKeyEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceKeyNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceKeyIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions DeviceKeyNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointNameEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointNameNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointNameIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointNameNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointTypeEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointTypeNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointTypeIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions EndpointTypeNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions EnrolmentListTimestampIn(params string[] value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions EnrolmentListTimestampNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions EnrolmentListTimestampLessThan(string value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions EnrolmentListTimestampGreaterThan(string value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions FirmwareChecksumEqualTo(string value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions FirmwareChecksumNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions FirmwareChecksumIn(params string[] value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions FirmwareChecksumNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions HostGatewayEqualTo(string value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions HostGatewayNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions HostGatewayIn(params string[] value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions HostGatewayNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions IdEqualTo(string value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions IdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions IdIn(params string[] value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions IdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestEqualTo(string value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestIn(params string[] value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestTimestampIn(params string[] value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestTimestampNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestTimestampLessThan(string value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions ManifestTimestampGreaterThan(string value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismEqualTo(string value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismIn(params string[] value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismUrlEqualTo(string value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismUrlNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismUrlIn(params string[] value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions MechanismUrlNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions NameEqualTo(string value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions NameNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions NameIn(params string[] value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions NameNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions SerialNumberEqualTo(string value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions SerialNumberNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions SerialNumberIn(params string[] value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions SerialNumberNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions StateEqualTo(string value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions StateNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions StateIn(params string[] value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions StateNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions UpdatedAtIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions UpdatedAtNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceGroupDeviceListOptions UpdatedAtLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceGroupDeviceListOptions UpdatedAtGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceGroupDeviceListOptions VendorIdEqualTo(string value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceGroupDeviceListOptions VendorIdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceGroupDeviceListOptions VendorIdIn(params string[] value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceGroupDeviceListOptions VendorIdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }
    }
}