/* 
 * <auto-generated>
 * Connect CA API
 *
 * Connect CA API provides methods to create and get Developer certificate. Also Connect CA provides server-credentials for Bootstarp and LWM2M Server.
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * </auto-generated>
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using connector_ca.Client;
using connector_ca.Api;
using connector_ca.Model;

namespace connector_ca.Test
{
    /// <summary>
    ///  Class for testing DeveloperCertificateApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DeveloperCertificateApiTests
    {
        private DeveloperCertificateApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DeveloperCertificateApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DeveloperCertificateApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DeveloperCertificateApi
            //Assert.IsInstanceOfType(typeof(DeveloperCertificateApi), instance, "instance is a DeveloperCertificateApi");
        }

        
        /// <summary>
        /// Test V3DeveloperCertificatesMuuidGet
        /// </summary>
        [Test]
        public void V3DeveloperCertificatesMuuidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string muuid = null;
            //string authorization = null;
            //var response = instance.V3DeveloperCertificatesMuuidGet(muuid, authorization);
            //Assert.IsInstanceOf<DeveloperCertificateResponseData> (response, "response is DeveloperCertificateResponseData");
        }
        
        /// <summary>
        /// Test V3DeveloperCertificatesPost
        /// </summary>
        [Test]
        public void V3DeveloperCertificatesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //DeveloperCertificateRequestData body = null;
            //var response = instance.V3DeveloperCertificatesPost(authorization, body);
            //Assert.IsInstanceOf<DeveloperCertificateResponseData> (response, "response is DeveloperCertificateResponseData");
        }
        
    }

}
