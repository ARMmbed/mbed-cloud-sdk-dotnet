/* 
 * <auto-generated>
 * Connect CA API
 *
 * mbed Cloud Connect CA API allows services to get device credentials.
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * </auto-generated>
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = connector_ca.Client.SwaggerDateConverter;

namespace connector_ca.Model
{
    /// <summary>
    /// DeveloperCertificateResponseData
    /// </summary>
    [DataContract]
    public partial class DeveloperCertificateResponseData :  IEquatable<DeveloperCertificateResponseData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeveloperCertificateResponseData" /> class.
        /// </summary>
        /// <param name="AccountId">account to which the developer certificate belongs.</param>
        /// <param name="CreatedAt">Creation UTC time RFC3339..</param>
        /// <param name="Description">Description for the developer certificate..</param>
        /// <param name="DeveloperCertificate">PEM format X.509 developer certificate..</param>
        /// <param name="DeveloperPrivateKey">PEM format developer private key associated to the certificate..</param>
        /// <param name="Etag">API resource entity version..</param>
        /// <param name="Id">mUUID that uniquely identifies the developer certificate..</param>
        /// <param name="Name">Name of the developer certificate..</param>
        /// <param name="_Object">Entity name, always &#39;trusted-cert&#39;.</param>
        /// <param name="SecurityFileContent">Content of the security.c file that will be flashed into the device to provide the security credentials.</param>
        public DeveloperCertificateResponseData(string AccountId = default(string), DateTime? CreatedAt = default(DateTime?), string Description = default(string), string DeveloperCertificate = default(string), string DeveloperPrivateKey = default(string), string Etag = default(string), string Id = default(string), string Name = default(string), string _Object = default(string), string SecurityFileContent = default(string))
        {
            this.AccountId = AccountId;
            this.CreatedAt = CreatedAt;
            this.Description = Description;
            this.DeveloperCertificate = DeveloperCertificate;
            this.DeveloperPrivateKey = DeveloperPrivateKey;
            this.Etag = Etag;
            this.Id = Id;
            this.Name = Name;
            this._Object = _Object;
            this.SecurityFileContent = SecurityFileContent;
        }
        
        /// <summary>
        /// account to which the developer certificate belongs
        /// </summary>
        /// <value>account to which the developer certificate belongs</value>
        [DataMember(Name="account_id", EmitDefaultValue=false)]
        public string AccountId { get; set; }

        /// <summary>
        /// Creation UTC time RFC3339.
        /// </summary>
        /// <value>Creation UTC time RFC3339.</value>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Description for the developer certificate.
        /// </summary>
        /// <value>Description for the developer certificate.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// PEM format X.509 developer certificate.
        /// </summary>
        /// <value>PEM format X.509 developer certificate.</value>
        [DataMember(Name="developer_certificate", EmitDefaultValue=false)]
        public string DeveloperCertificate { get; set; }

        /// <summary>
        /// PEM format developer private key associated to the certificate.
        /// </summary>
        /// <value>PEM format developer private key associated to the certificate.</value>
        [DataMember(Name="developer_private_key", EmitDefaultValue=false)]
        public string DeveloperPrivateKey { get; set; }

        /// <summary>
        /// API resource entity version.
        /// </summary>
        /// <value>API resource entity version.</value>
        [DataMember(Name="etag", EmitDefaultValue=false)]
        public string Etag { get; set; }

        /// <summary>
        /// mUUID that uniquely identifies the developer certificate.
        /// </summary>
        /// <value>mUUID that uniquely identifies the developer certificate.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Name of the developer certificate.
        /// </summary>
        /// <value>Name of the developer certificate.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Entity name, always &#39;trusted-cert&#39;
        /// </summary>
        /// <value>Entity name, always &#39;trusted-cert&#39;</value>
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string _Object { get; set; }

        /// <summary>
        /// Content of the security.c file that will be flashed into the device to provide the security credentials
        /// </summary>
        /// <value>Content of the security.c file that will be flashed into the device to provide the security credentials</value>
        [DataMember(Name="security_file_content", EmitDefaultValue=false)]
        public string SecurityFileContent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeveloperCertificateResponseData {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DeveloperCertificate: ").Append(DeveloperCertificate).Append("\n");
            sb.Append("  DeveloperPrivateKey: ").Append(DeveloperPrivateKey).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  _Object: ").Append(_Object).Append("\n");
            sb.Append("  SecurityFileContent: ").Append(SecurityFileContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DeveloperCertificateResponseData);
        }

        /// <summary>
        /// Returns true if DeveloperCertificateResponseData instances are equal
        /// </summary>
        /// <param name="input">Instance of DeveloperCertificateResponseData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeveloperCertificateResponseData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.DeveloperCertificate == input.DeveloperCertificate ||
                    (this.DeveloperCertificate != null &&
                    this.DeveloperCertificate.Equals(input.DeveloperCertificate))
                ) && 
                (
                    this.DeveloperPrivateKey == input.DeveloperPrivateKey ||
                    (this.DeveloperPrivateKey != null &&
                    this.DeveloperPrivateKey.Equals(input.DeveloperPrivateKey))
                ) && 
                (
                    this.Etag == input.Etag ||
                    (this.Etag != null &&
                    this.Etag.Equals(input.Etag))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this._Object == input._Object ||
                    (this._Object != null &&
                    this._Object.Equals(input._Object))
                ) && 
                (
                    this.SecurityFileContent == input.SecurityFileContent ||
                    (this.SecurityFileContent != null &&
                    this.SecurityFileContent.Equals(input.SecurityFileContent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                    hashCode = hashCode * 59 + this.AccountId.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.DeveloperCertificate != null)
                    hashCode = hashCode * 59 + this.DeveloperCertificate.GetHashCode();
                if (this.DeveloperPrivateKey != null)
                    hashCode = hashCode * 59 + this.DeveloperPrivateKey.GetHashCode();
                if (this.Etag != null)
                    hashCode = hashCode * 59 + this.Etag.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this._Object != null)
                    hashCode = hashCode * 59 + this._Object.GetHashCode();
                if (this.SecurityFileContent != null)
                    hashCode = hashCode * 59 + this.SecurityFileContent.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
