/* 
 * <auto-generated>
 * Connect Statistics API
 *
 * mbed Cloud Connect Statistics API provides statistics about other cloud services through defined counters.
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * </auto-generated>
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using statistics.Api;
using statistics.Model;
using statistics.Client;
using System.Reflection;

namespace statistics.Test
{
    /// <summary>
    ///  Class for testing Fields
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class FieldsTests
    {
        // TODO uncomment below to declare an instance variable for Fields
        //private Fields instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Fields
            //instance = new Fields();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Fields
        /// </summary>
        [Test]
        public void FieldsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Fields
            //Assert.IsInstanceOfType<Fields> (instance, "variable 'instance' is a Fields");
        }

        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Test]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

    }

}
