/* 
 * <auto-generated>
 * Connect CA API
 *
 * mbed Cloud Connect CA API allows services to get device credentials.
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * </auto-generated>
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = connector_ca.Client.SwaggerDateConverter;

namespace connector_ca.Model
{
    /// <summary>
    /// AllServerCredentialsResponseData
    /// </summary>
    [DataContract]
    public partial class AllServerCredentialsResponseData :  IEquatable<AllServerCredentialsResponseData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AllServerCredentialsResponseData" /> class.
        /// </summary>
        /// <param name="Bootstrap">Bootstrap.</param>
        /// <param name="Lwm2m">Lwm2m.</param>
        public AllServerCredentialsResponseData(CredentialsResponseData Bootstrap = default(CredentialsResponseData), CredentialsResponseData Lwm2m = default(CredentialsResponseData))
        {
            this.Bootstrap = Bootstrap;
            this.Lwm2m = Lwm2m;
        }
        
        /// <summary>
        /// Gets or Sets Bootstrap
        /// </summary>
        [DataMember(Name="bootstrap", EmitDefaultValue=false)]
        public CredentialsResponseData Bootstrap { get; set; }

        /// <summary>
        /// Gets or Sets Lwm2m
        /// </summary>
        [DataMember(Name="lwm2m", EmitDefaultValue=false)]
        public CredentialsResponseData Lwm2m { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AllServerCredentialsResponseData {\n");
            sb.Append("  Bootstrap: ").Append(Bootstrap).Append("\n");
            sb.Append("  Lwm2m: ").Append(Lwm2m).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AllServerCredentialsResponseData);
        }

        /// <summary>
        /// Returns true if AllServerCredentialsResponseData instances are equal
        /// </summary>
        /// <param name="input">Instance of AllServerCredentialsResponseData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AllServerCredentialsResponseData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Bootstrap == input.Bootstrap ||
                    (this.Bootstrap != null &&
                    this.Bootstrap.Equals(input.Bootstrap))
                ) && 
                (
                    this.Lwm2m == input.Lwm2m ||
                    (this.Lwm2m != null &&
                    this.Lwm2m.Equals(input.Lwm2m))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Bootstrap != null)
                    hashCode = hashCode * 59 + this.Bootstrap.GetHashCode();
                if (this.Lwm2m != null)
                    hashCode = hashCode * 59 + this.Lwm2m.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
