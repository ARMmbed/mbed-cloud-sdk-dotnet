using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;

namespace Manhasset.Core.src.Generators
{
    public static class NamespaceGenerators
    {
        public static NamespaceDeclarationSyntax AddFileHeader(this NamespaceDeclarationSyntax me, string fileHeader, string company)
        {
            var header = SyntaxFactory.TriviaList(
                new[]{
                    SyntaxFactory.Comment("// <auto-generated>"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("//"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("// Generated by"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("//                     _                        _"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("//   /\\/\\   __ _ _ __ | |__   __ _ ___ ___  ___| |_"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("//  /    \\ / _` | '_ \\| '_ \\ / _` / __/ __|/ _ \\ __|"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("// / /\\/\\ \\ (_| | | | | | | | (_| \\__ \\__ \\  __/ |_"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("// \\/    \\/\\__,_|_| |_|_| |_|\\__,_|___/___/\\___|\\__| v 2.0.0"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("//"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment($"// <copyright file=\"{fileHeader}.cs\" company=\"{company}\">"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment($"// Copyright (c) {company}. All rights reserved."),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("// </copyright>"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.Comment("// </auto-generated>"),
                        SyntaxFactory.LineFeed,
                        SyntaxFactory.LineFeed,
                }
            );

            return me.InsertTriviaBefore(me.GetLeadingTrivia().First(), header);
        }
    }
}