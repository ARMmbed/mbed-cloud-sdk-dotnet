entities:
- _key:
    camel: accountGroup
    name: account_group
    pascal: AccountGroup
    snake: account_group
  fields:
  - _key:
      camel: Id
      name: id
      pascal: Id
      snake: id
    description: Entity ID.
    example: 01619571dad80242ac12000600000000
    type: string
  - _key:
      camel: createdAt
      name: created_at
      pascal: CreatedAt
      snake: created_at
    description: Creation UTC time RFC3339.
    example: '2018-02-13T09:35:20Z'
    format: date-time
    type: string
  - _key:
      camel: updatedAt
      name: updated_at
      pascal: UpdatedAt
      snake: updated_at
    description: Last update UTC time RFC3339.
    example: '2018-02-14T15:24:14Z'
    format: date-time
    type: string
  - _key:
      camel: accountId
      name: account_id
      pascal: AccountId
      snake: account_id
    description: The UUID of the account this group belongs to.
    example: 01619571e2e90242ac12000600000000
    type: string
  - _key:
      camel: Name
      name: name
      pascal: Name
      snake: name
    description: The name of the group.
    example: Administrators
    type: string
  - _key:
      camel: userCount
      name: user_count
      pascal: UserCount
      snake: user_count
    description: The number of users in this group.
    example: 1
    format: int32
    type: integer
  - _key:
      camel: apikeyCount
      name: apikey_count
      pascal: ApikeyCount
      snake: apikey_count
    description: The number of API keys in this group.
    example: 0
    format: int32
    type: integer
  - _key:
      camel: Code
      name: code
      pascal: Code
      snake: code
    description: Response code.
    example: 200
    format: int32
    type: integer
  - _key:
      camel: Type
      name: type
      pascal: Type
      snake: type
    description: 'Response type: success.'
    enum:
    - success
    enum_reference:
      camel: accountGroupTypeEnum
      name: account_group_type_enum
      pascal: AccountGroupTypeEnum
      snake: account_group_type_enum
    type: string
  - _key:
      camel: Message
      name: message
      pascal: Message
      snake: message
    description: A human readable message with detailed info.
    example: success
    type: string
  - _key:
      camel: requestId
      name: request_id
      pascal: RequestId
      snake: request_id
    description: Request ID.
    example: 0161991d63150242ac12000600000000
    type: string
  group_id:
    camel: Developer
    name: Developer
    pascal: Developer
    snake: developer
  modes:
  - _key:
      camel: Read
      name: read
      pascal: Read
      snake: read
    description: "An endpoint for getting general information about the group. \n\n\
      **Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id}\
      \ -H 'Authorization: Bearer API_KEY'`"
    field_renames: []
    fields:
    - _key:
        camel: GroupID
        name: groupID
        pascal: GroupID
        snake: groupid
      api_fieldname: groupID
      description: The ID of the group to be retrieved.
      entity_fieldname: groupID
      external_param: true
      in:
      - path
      name: groupID
      parameter_fieldname: groupID
      required: true
      type: string
    method: get
    mode: read
    operation_id: getGroupSummary
    path: /v3/policy-groups/{groupID}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: accountGroup
        name: account_group
        pascal: AccountGroup
        snake: account_group
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: &id001
          - error
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: &id002
          - success
          - created
          - accepted
          - permanently_deleted
          - validation_error
          - invalid_token
          - invalid_apikey
          - reauth_required
          - access_denied
          - account_limit_exceeded
          - not_found
          - method_not_supported
          - not_acceptable
          - duplicate
          - precondition_failed
          - unsupported_media_type
          - rate_limit_exceeded
          - internal_server_error
          - system_unavailable
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: &id003
            - message
            - name
            type: object
          type: array
        required: &id004
        - code
        - message
        - object
        - request_id
        - type
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: A group with that ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Get group information.
  - _key:
      camel: Update
      name: update
      pascal: Update
      snake: update
    description: "An endpoint for updating a group name. \n\n**Example usage:**\n\
      `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id}\
      \ -d '{\"name\": \"TestGroup2\"}' -H 'content-type: application/json' -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames: []
    fields:
    - _key:
        camel: GroupID
        name: groupID
        pascal: GroupID
        snake: groupid
      api_fieldname: groupID
      description: The ID of the group to be updated.
      entity_fieldname: groupID
      external_param: true
      in:
      - path
      name: groupID
      parameter_fieldname: groupID
      required: true
      type: string
    method: put
    mode: update
    operation_id: updateGroupName
    path: /v3/policy-groups/{groupID}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: successful operation
      schema:
        description: This object represents a response to an update request.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: 'Entity name: ''user'', ''apikey'', ''group'', ''policy'' or
            ''account''.'
          enum:
          - user
          - api-key
          - group
          - account
          - account-template
          - trusted-cert
          - list
          - error
          - policy
          - identity-provider
          - user-session
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 200
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: 'Response type: success.'
          enum:
          - success
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: success
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Id
            name: id
            pascal: Id
            snake: id
          description: Entity ID.
          example: 01619571dad80242ac12000600000000
          type: string
        required:
        - code
        - id
        - message
        - object
        - request_id
        - type
        type: object
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Error in input data, for example the group name is too long.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: A group with that ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Update the group name.
  swagger_models:
  - GroupSummary
  - UpdatedResponse
  tags:
  - Developer
  - Account Admin
- _key:
    camel: User
    name: user
    pascal: User
    snake: user
  fields:
  - _key:
      camel: Id
      name: id
      pascal: Id
      snake: id
    _override: true
    description: The UUID of the user.
    example: 01619571e2e89242ac12000600000000
    type: string
  - _key:
      camel: createdAt
      name: created_at
      pascal: CreatedAt
      snake: created_at
    description: Creation UTC time RFC3339.
    example: '2018-02-13T09:35:20Z'
    format: date-time
    type: string
  - _key:
      camel: updatedAt
      name: updated_at
      pascal: UpdatedAt
      snake: updated_at
    description: Last update UTC time RFC3339.
    example: '2018-02-14T15:24:14Z'
    format: date-time
    type: string
  - _key:
      camel: Status
      name: status
      pascal: Status
      snake: status
    description: The status of the user. ENROLLING state indicates that the user is
      in the middle of the enrollment process. INVITED means that the user has not
      accepted the invitation request. RESET means that the password must be changed
      immediately. INACTIVE users are locked out and not permitted to use the system.
    enum:
    - ENROLLING
    - INVITED
    - ACTIVE
    - RESET
    - INACTIVE
    enum_reference:
      camel: userStatusEnum
      name: user_status_enum
      pascal: UserStatusEnum
      snake: user_status_enum
    example: ACTIVE
    type: string
  - _key:
      camel: Username
      name: username
      pascal: Username
      snake: username
    description: A username containing alphanumerical letters and -,._@+= characters.
    example: admin
    type: string
  - _key:
      camel: Password
      name: password
      pascal: Password
      snake: password
    description: The password when creating a new user. It will be generated when
      not present in the request.
    example: PZf9eEUH43DAPE9ULINFeuj
    type: string
  - _key:
      camel: fullName
      name: full_name
      pascal: FullName
      snake: full_name
    description: The full name of the user.
    example: User Doe
    type: string
  - _key:
      camel: Email
      name: email
      pascal: Email
      snake: email
    description: The email address.
    example: user@arm.com
    type: string
  - _key:
      camel: Address
      name: address
      pascal: Address
      snake: address
    description: Address.
    example: 110 Fulbourn Rd, Cambridge, United Kingdom
    type: string
  - _key:
      camel: phoneNumber
      name: phone_number
      pascal: PhoneNumber
      snake: phone_number
    description: Phone number.
    example: +44 (1223) 400 400
    type: string
  - _key:
      camel: Groups
      name: groups
      pascal: Groups
      snake: groups
    description: A list of IDs of the groups this user belongs to.
    items:
      type: string
    type: array
  - _key:
      camel: isGtcAccepted
      name: is_gtc_accepted
      pascal: IsGtcAccepted
      snake: is_gtc_accepted
    description: A flag indicating that the General Terms and Conditions has been
      accepted.
    example: true
    type: boolean
  - _key:
      camel: isMarketingAccepted
      name: is_marketing_accepted
      pascal: IsMarketingAccepted
      snake: is_marketing_accepted
    description: A flag indicating that receiving marketing information has been accepted.
    example: true
    type: boolean
  - _key:
      camel: emailVerified
      name: email_verified
      pascal: EmailVerified
      snake: email_verified
    description: A flag indicating whether the user's email address has been verified
      or not.
    example: true
    type: boolean
  - _key:
      camel: creationTime
      name: creation_time
      pascal: CreationTime
      snake: creation_time
    description: A timestamp of the user creation in the storage, in milliseconds.
    example: 1518630727683
    format: int64
    type: integer
  - _key:
      camel: lastLoginTime
      name: last_login_time
      pascal: LastLoginTime
      snake: last_login_time
    description: A timestamp of the latest login of the user, in milliseconds.
    example: 1518630727688
    format: int64
    type: integer
  - _key:
      camel: passwordChangedTime
      name: password_changed_time
      pascal: PasswordChangedTime
      snake: password_changed_time
    description: A timestamp of the latest change of the user password, in milliseconds.
    example: 1518630727688
    format: int64
    type: integer
  - _key:
      camel: accountId
      name: account_id
      pascal: AccountId
      snake: account_id
    description: The UUID of the account.
    example: 01619571e2e90242ac12000600000000
    type: string
  - _key:
      camel: loginHistory
      name: login_history
      pascal: LoginHistory
      snake: login_history
    description: Timestamps, succeedings, IP addresses and user agent information
      of the last five logins of the user, with timestamps in RFC3339 format.
    items:
      $ref: '#/definitions/LoginHistory'
    type: array
  - _key:
      camel: twoFactorAuthEnabled
      name: two_factor_auth_enabled
      pascal: TwoFactorAuthEnabled
      snake: two_factor_auth_enabled
    description: A flag indicating whether 2-factor authentication (TOTP) has been
      enabled.
    example: true
    type: boolean
  group_id:
    camel: accountAdmin
    name: Account Admin
    pascal: AccountAdmin
    snake: account_admin
  modes:
  - _key:
      camel: Read
      name: read
      pascal: Read
      snake: read
    description: "An endpoint for retrieving the details of a user. \n\n**Example\
      \ usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/users/{user-id} -H\
      \ 'Authorization: Bearer API_KEY'`"
    field_renames:
    - _key:
        camel: twoFactorAuthEnabled
        name: two_factor_auth_enabled
        pascal: TwoFactorAuthEnabled
        snake: two_factor_auth_enabled
      api_fieldname: is_totp_enabled
    fields: []
    method: get
    mode: read
    operation_id: getUser
    path: /v3/users/{user-id}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: User
        name: user
        pascal: User
        snake: user
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: A user with the specified ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Details of a user.
  - _key:
      camel: Update
      name: update
      pascal: Update
      snake: update
    description: "An endpoint for updating user details. \n\n**Example usage:**\n\
      `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/users/{user-id} -d '{\"\
      username\": \"myusername\"}' -H 'content-type: application/json' -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames:
    - _key:
        camel: twoFactorAuthEnabled
        name: two_factor_auth_enabled
        pascal: TwoFactorAuthEnabled
        snake: two_factor_auth_enabled
      api_fieldname: is_totp_enabled
    fields:
    - _key:
        camel: Username
        name: username
        pascal: Username
        snake: username
      api_fieldname: username
      description: A username containing alphanumerical letters and -,._@+= characters.
      entity_fieldname: username
      example: admin
      in:
      - body
      parameter_fieldname: username
      required: false
      type: string
    - _key:
        camel: fullName
        name: full_name
        pascal: FullName
        snake: full_name
      api_fieldname: full_name
      description: The full name of the user.
      entity_fieldname: full_name
      example: User Doe
      in:
      - body
      parameter_fieldname: full_name
      required: false
      type: string
    - _key:
        camel: Address
        name: address
        pascal: Address
        snake: address
      api_fieldname: address
      description: Address.
      entity_fieldname: address
      example: 110 Fulbourn Rd, Cambridge, United Kingdom
      in:
      - body
      parameter_fieldname: address
      required: false
      type: string
    - _key:
        camel: phoneNumber
        name: phone_number
        pascal: PhoneNumber
        snake: phone_number
      api_fieldname: phone_number
      description: Phone number.
      entity_fieldname: phone_number
      example: +44 (1223) 400 400
      in:
      - body
      parameter_fieldname: phone_number
      required: false
      type: string
    - _key:
        camel: Groups
        name: groups
        pascal: Groups
        snake: groups
      api_fieldname: groups
      description: A list of IDs of the groups this user belongs to.
      entity_fieldname: groups
      in:
      - body
      items:
        type: string
      parameter_fieldname: groups
      required: false
      type: array
    - _key:
        camel: isGtcAccepted
        name: is_gtc_accepted
        pascal: IsGtcAccepted
        snake: is_gtc_accepted
      api_fieldname: is_gtc_accepted
      description: A flag indicating that the General Terms and Conditions has been
        accepted.
      entity_fieldname: is_gtc_accepted
      example: true
      in:
      - body
      parameter_fieldname: is_gtc_accepted
      required: false
      type: boolean
    - _key:
        camel: isMarketingAccepted
        name: is_marketing_accepted
        pascal: IsMarketingAccepted
        snake: is_marketing_accepted
      api_fieldname: is_marketing_accepted
      description: A flag indicating that receiving marketing information has been
        accepted.
      entity_fieldname: is_marketing_accepted
      example: true
      in:
      - body
      parameter_fieldname: is_marketing_accepted
      required: false
      type: boolean
    - _key:
        camel: twoFactorAuthEnabled
        name: two_factor_auth_enabled
        pascal: TwoFactorAuthEnabled
        snake: two_factor_auth_enabled
      api_fieldname: is_totp_enabled
      description: A flag indicating whether 2-factor authentication (TOTP) has been
        enabled.
      entity_fieldname: two_factor_auth_enabled
      example: true
      in:
      - body
      parameter_fieldname: is_totp_enabled
      required: false
      type: boolean
    method: put
    mode: update
    operation_id: updateUser
    path: /v3/users/{user-id}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: User
        name: user
        pascal: User
        snake: user
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Error in input data, for example an invalid email address.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: A user with the given ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '409'
        name: '409'
        pascal: '409'
        snake: '409'
      description: A user with the given username or email already exists.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Update user details.
  - _key:
      camel: Delete
      name: delete
      pascal: Delete
      snake: delete
    description: "An endpoint for deleting a user. \n\n**Example usage:**\n`curl -X\
      \ DELETE https://api.us-east-1.mbedcloud.com/v3/users/{user-id} -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames:
    - _key:
        camel: twoFactorAuthEnabled
        name: two_factor_auth_enabled
        pascal: TwoFactorAuthEnabled
        snake: two_factor_auth_enabled
      api_fieldname: is_totp_enabled
    fields: []
    method: delete
    mode: delete
    operation_id: deleteUser
    path: /v3/users/{user-id}
    responses:
    - _key:
        camel: '204'
        name: '204'
        pascal: '204'
        snake: '204'
      description: Deleted successfully.
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Bad request, for example trying to delete active user.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: A user with the specified ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Delete a user.
  - _key:
      camel: List
      name: list
      pascal: List
      snake: list
    description: "An endpoint for retrieving the details of all users. \n\n**Example\
      \ usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/users -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames:
    - _key:
        camel: twoFactorAuthEnabled
        name: two_factor_auth_enabled
        pascal: TwoFactorAuthEnabled
        snake: two_factor_auth_enabled
      api_fieldname: is_totp_enabled
    fields:
    - _key:
        camel: Limit
        name: limit
        pascal: Limit
        snake: limit
      api_fieldname: limit
      default: 50
      description: The number of results to return (2-1000), default is 50.
      entity_fieldname: limit
      external_param: true
      format: int32
      in:
      - query
      name: limit
      parameter_fieldname: limit
      required: false
      type: integer
    - _key:
        camel: After
        name: after
        pascal: After
        snake: after
      api_fieldname: after
      description: The entity ID to fetch after the given one.
      entity_fieldname: after
      external_param: true
      in:
      - query
      name: after
      parameter_fieldname: after
      required: false
      type: string
    - _key:
        camel: Order
        name: order
        pascal: Order
        snake: order
      api_fieldname: order
      default: ASC
      description: The order of the records based on creation time, ASC or DESC; by
        default ASC
      entity_fieldname: order
      external_param: true
      in:
      - query
      name: order
      parameter_fieldname: order
      required: false
      type: string
    - _key:
        camel: Include
        name: include
        pascal: Include
        snake: include
      api_fieldname: include
      description: 'Comma separated additional data to return. Currently supported:
        total_count'
      entity_fieldname: include
      external_param: true
      in:
      - query
      name: include
      parameter_fieldname: include
      required: false
      type: string
    method: get
    mode: list
    operation_id: getAllUsers
    path: /v3/users
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
        paginate: true
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: 'Entity name: always ''list'''
          enum:
          - list
          type: string
        - _key:
            camel: Limit
            name: limit
            pascal: Limit
            snake: limit
          description: 'The number of results to return, (range: 2-1000), or equals
            to `total_count`'
          example: 50
          format: int32
          type: integer
        - _key:
            camel: After
            name: after
            pascal: After
            snake: after
          description: The entity ID to fetch after the given one.
          example: 01619571f3c00242ac12000600000000
          type: string
        - _key:
            camel: Order
            name: order
            pascal: Order
            snake: order
          description: 'The order of the records to return based on creation time.
            Available values: ASC, DESC; by default ASC.'
          enum:
          - ASC
          - DESC
          type: string
        - _key:
            camel: totalCount
            name: total_count
            pascal: TotalCount
            snake: total_count
          description: The total number or records, if requested. It might be returned
            also for small lists.
          example: 20
          format: int32
          type: integer
        - _key:
            camel: hasMore
            name: has_more
            pascal: HasMore
            snake: has_more
          description: Flag indicating whether there is more results.
          example: false
          type: boolean
        - _key:
            camel: Data
            name: data
            pascal: Data
            snake: data
          description: A list of entities.
          items:
          - _key:
              camel: foreignKey
              name: foreign_key
              pascal: ForeignKey
              snake: foreign_key
            camel: User
            name: user
            pascal: User
            snake: user
          type: array
        required:
        - data
        - has_more
        - limit
        - object
        - total_count
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Get the details of all users.
  - _key:
      camel: groupIds
      name: group_ids
      pascal: GroupIds
      snake: group_ids
    description: "An endpoint for retrieving groups of the user. \n\n**Example usage:**\n\
      `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{user-id}/groups\
      \ -H 'Authorization: Bearer API_KEY'`"
    field_renames:
    - _key:
        camel: twoFactorAuthEnabled
        name: two_factor_auth_enabled
        pascal: TwoFactorAuthEnabled
        snake: two_factor_auth_enabled
      api_fieldname: is_totp_enabled
    fields:
    - _key:
        camel: Limit
        name: limit
        pascal: Limit
        snake: limit
      api_fieldname: limit
      default: 50
      description: The number of results to return (2-1000), default is 50.
      entity_fieldname: limit
      external_param: true
      format: int32
      in:
      - query
      name: limit
      parameter_fieldname: limit
      required: false
      type: integer
    - _key:
        camel: After
        name: after
        pascal: After
        snake: after
      api_fieldname: after
      description: The entity ID to fetch after the given one.
      entity_fieldname: after
      external_param: true
      in:
      - query
      name: after
      parameter_fieldname: after
      required: false
      type: string
    - _key:
        camel: Order
        name: order
        pascal: Order
        snake: order
      api_fieldname: order
      default: ASC
      description: The order of the records based on creation time, ASC or DESC; by
        default ASC
      entity_fieldname: order
      external_param: true
      in:
      - query
      name: order
      parameter_fieldname: order
      required: false
      type: string
    - _key:
        camel: Include
        name: include
        pascal: Include
        snake: include
      api_fieldname: include
      description: 'Comma separated additional data to return. Currently supported:
        total_count'
      entity_fieldname: include
      external_param: true
      in:
      - query
      name: include
      parameter_fieldname: include
      required: false
      type: string
    - _key:
        camel: AccountID
        name: accountID
        pascal: AccountID
        snake: accountid
      api_fieldname: accountID
      description: Account ID.
      entity_fieldname: accountID
      external_param: true
      in:
      - path
      name: accountID
      parameter_fieldname: accountID
      required: true
      type: string
    method: get
    mode: group_ids
    operation_id: getGroupsOfAccountUser
    path: /v3/accounts/{accountID}/users/{user-id}/groups
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
        paginate: true
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: 'Entity name: always ''list'''
          enum: &id005
          - list
          type: string
        - _key:
            camel: Limit
            name: limit
            pascal: Limit
            snake: limit
          description: 'The number of results to return, (range: 2-1000), or equals
            to `total_count`'
          example: 50
          format: int32
          type: integer
        - _key:
            camel: After
            name: after
            pascal: After
            snake: after
          description: The entity ID to fetch after the given one.
          example: 01619571f3c00242ac12000600000000
          type: string
        - _key:
            camel: Order
            name: order
            pascal: Order
            snake: order
          description: 'The order of the records to return based on creation time.
            Available values: ASC, DESC; by default ASC.'
          enum: &id006
          - ASC
          - DESC
          type: string
        - _key:
            camel: totalCount
            name: total_count
            pascal: TotalCount
            snake: total_count
          description: The total number or records, if requested. It might be returned
            also for small lists.
          example: 20
          format: int32
          type: integer
        - _key:
            camel: hasMore
            name: has_more
            pascal: HasMore
            snake: has_more
          description: Flag indicating whether there is more results.
          example: false
          type: boolean
        - _key:
            camel: Data
            name: data
            pascal: Data
            snake: data
          description: A list of entities.
          items:
          - _key:
              camel: foreignKey
              name: foreign_key
              pascal: ForeignKey
              snake: foreign_key
            camel: accountGroup
            name: account_group
            pascal: AccountGroup
            snake: account_group
          type: array
        required: &id007
        - data
        - has_more
        - limit
        - object
        - total_count
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: An account or a user with the specified ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Get groups of the user.
  swagger_models:
  - UserInfoResp
  - UserInfoRespList
  - GroupSummaryList
  tags:
  - Account Admin
  - Account Admin
  - Account Admin
  - Account Admin
  - Aggregator Account Admin
- _key:
    camel: apiKey
    name: api_key
    pascal: ApiKey
    snake: api_key
  fields:
  - _key:
      camel: Id
      name: id
      pascal: Id
      snake: id
    description: The UUID of the API key.
    example: 01619571f7020242ac12000600000000
    type: string
  - _key:
      camel: createdAt
      name: created_at
      pascal: CreatedAt
      snake: created_at
    description: Creation UTC time RFC3339.
    example: '2018-02-13T09:35:20Z'
    format: date-time
    type: string
  - _key:
      camel: updatedAt
      name: updated_at
      pascal: UpdatedAt
      snake: updated_at
    description: Last update UTC time RFC3339.
    example: '2018-02-14T15:24:14Z'
    format: date-time
    type: string
  - _key:
      camel: Key
      name: key
      pascal: Key
      snake: key
    description: The API key.
    example: ak_1MDE2MTk1NzFmNmU4MDI0MmFjMTIwMDA2MDAwMDAwMDA01619571f7020242ac12000600000000
    type: string
  - _key:
      camel: Name
      name: name
      pascal: Name
      snake: name
    description: The display name for the API key.
    example: API key gorgon
    type: string
  - _key:
      camel: Groups
      name: groups
      pascal: Groups
      snake: groups
    description: A list of group IDs this API key belongs to.
    items:
      type: string
    type: array
  - _key:
      camel: Owner
      name: owner
      pascal: Owner
      snake: owner
    description: The owner of this API key, who is the creator by default.
    example: 01619571e2e89242ac12000600000000
    type: string
  - _key:
      camel: Status
      name: status
      pascal: Status
      snake: status
    description: The status of the API key.
    enum:
    - ACTIVE
    - INACTIVE
    enum_reference:
      camel: apiKeyStatusEnum
      name: api_key_status_enum
      pascal: ApiKeyStatusEnum
      snake: api_key_status_enum
    example: ACTIVE
    type: string
  - _key:
      camel: creationTime
      name: creation_time
      pascal: CreationTime
      snake: creation_time
    description: The timestamp of the API key creation in the storage, in milliseconds.
    example: 1518630727683
    format: int64
    type: integer
  - _key:
      camel: lastLoginTime
      name: last_login_time
      pascal: LastLoginTime
      snake: last_login_time
    description: The timestamp of the latest API key usage, in milliseconds.
    example: 1518630727688
    format: int64
    type: integer
  group_id:
    camel: Accounts
    name: Accounts
    pascal: Accounts
    snake: accounts
  modes:
  - _key:
      camel: Groups
      name: groups
      pascal: Groups
      snake: groups
    description: "An endpoint for retrieving groups of the API key. \n\n**Example\
      \ usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups\
      \ -H 'Authorization: Bearer API_KEY'`"
    field_renames: []
    fields:
    - _key:
        camel: Limit
        name: limit
        pascal: Limit
        snake: limit
      api_fieldname: limit
      default: 50
      description: The number of results to return (2-1000), default is 50.
      entity_fieldname: limit
      external_param: true
      format: int32
      in:
      - query
      name: limit
      parameter_fieldname: limit
      required: false
      type: integer
    - _key:
        camel: After
        name: after
        pascal: After
        snake: after
      api_fieldname: after
      description: The entity ID to fetch after the given one.
      entity_fieldname: after
      external_param: true
      in:
      - query
      name: after
      parameter_fieldname: after
      required: false
      type: string
    - _key:
        camel: Order
        name: order
        pascal: Order
        snake: order
      api_fieldname: order
      default: ASC
      description: The order of the records based on creation time, ASC or DESC; by
        default ASC
      entity_fieldname: order
      external_param: true
      in:
      - query
      name: order
      parameter_fieldname: order
      required: false
      type: string
    - _key:
        camel: Include
        name: include
        pascal: Include
        snake: include
      api_fieldname: include
      description: 'Comma separated additional data to return. Currently supported:
        total_count'
      entity_fieldname: include
      external_param: true
      in:
      - query
      name: include
      parameter_fieldname: include
      required: false
      type: string
    method: get
    mode: groups
    operation_id: getGroupsOfMyApiKey
    path: /v3/api-keys/me/groups
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
        paginate: true
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: 'Entity name: always ''list'''
          enum: *id005
          type: string
        - _key:
            camel: Limit
            name: limit
            pascal: Limit
            snake: limit
          description: 'The number of results to return, (range: 2-1000), or equals
            to `total_count`'
          example: 50
          format: int32
          type: integer
        - _key:
            camel: After
            name: after
            pascal: After
            snake: after
          description: The entity ID to fetch after the given one.
          example: 01619571f3c00242ac12000600000000
          type: string
        - _key:
            camel: Order
            name: order
            pascal: Order
            snake: order
          description: 'The order of the records to return based on creation time.
            Available values: ASC, DESC; by default ASC.'
          enum: *id006
          type: string
        - _key:
            camel: totalCount
            name: total_count
            pascal: TotalCount
            snake: total_count
          description: The total number or records, if requested. It might be returned
            also for small lists.
          example: 20
          format: int32
          type: integer
        - _key:
            camel: hasMore
            name: has_more
            pascal: HasMore
            snake: has_more
          description: Flag indicating whether there is more results.
          example: false
          type: boolean
        - _key:
            camel: Data
            name: data
            pascal: Data
            snake: data
          description: A list of entities.
          items:
          - _key:
              camel: foreignKey
              name: foreign_key
              pascal: ForeignKey
              snake: foreign_key
            camel: accountGroup
            name: account_group
            pascal: AccountGroup
            snake: account_group
          type: array
        required: *id007
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Get groups of the API key.
  - _key:
      camel: Create
      name: create
      pascal: Create
      snake: create
    description: "An endpoint for creating a new API key. \n\n**Example usage:**\n\
      `curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys -d '{\"name\"\
      : \"MyKey1\"}' -H 'content-type: application/json' -H 'Authorization: Bearer\
      \ API_KEY'`"
    field_renames: []
    fields:
    - _key:
        camel: Name
        name: name
        pascal: Name
        snake: name
      api_fieldname: name
      description: The display name for the API key.
      entity_fieldname: name
      example: API key gorgon
      in: &id008
      - body
      parameter_fieldname: name
      required: false
      type: string
    - _key:
        camel: Groups
        name: groups
        pascal: Groups
        snake: groups
      api_fieldname: groups
      description: A list of group IDs this API key belongs to.
      entity_fieldname: groups
      in: &id009
      - body
      items:
        type: string
      parameter_fieldname: groups
      required: false
      type: array
    - _key:
        camel: Owner
        name: owner
        pascal: Owner
        snake: owner
      api_fieldname: owner
      description: The owner of this API key, who is the creator by default.
      entity_fieldname: owner
      example: 01619571e2e89242ac12000600000000
      in: &id010
      - body
      parameter_fieldname: owner
      required: false
      type: string
    - _key:
        camel: Status
        name: status
        pascal: Status
        snake: status
      api_fieldname: status
      description: The status of the API key.
      entity_fieldname: status
      enum: &id011
      - ACTIVE
      - INACTIVE
      enum_reference:
        camel: apiKeyStatusEnum
        name: api_key_status_enum
        pascal: ApiKeyStatusEnum
        snake: api_key_status_enum
      example: ACTIVE
      in: &id012
      - body
      parameter_fieldname: status
      required: false
      type: string
    method: post
    mode: create
    operation_id: createApiKey
    path: /v3/api-keys
    responses:
    - _key:
        camel: '201'
        name: '201'
        pascal: '201'
        snake: '201'
      description: New entity created.
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: apiKey
        name: api_key
        pascal: ApiKey
        snake: api_key
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Error in input data, for example missing display name.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Create a new API key.
  - _key:
      camel: Read
      name: read
      pascal: Read
      snake: read
    description: "An endpoint for retrieving API key details. \n\n**Example usage:**\n\
      `curl https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames: []
    fields: []
    method: get
    mode: read
    operation_id: getApiKey
    path: /v3/api-keys/{apiKey}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: apiKey
        name: api_key
        pascal: ApiKey
        snake: api_key
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: API key with the specified ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Get API key details.
  - _key:
      camel: Update
      name: update
      pascal: Update
      snake: update
    description: "An endpoint for updating API key details. \n\n**Example usage:**\n\
      `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -d\
      \ '{\"name\": \"TestApiKey25\"}' -H 'content-type: application/json' -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames: []
    fields:
    - _key:
        camel: Name
        name: name
        pascal: Name
        snake: name
      api_fieldname: name
      description: The display name for the API key.
      entity_fieldname: name
      example: API key gorgon
      in: *id008
      parameter_fieldname: name
      required: false
      type: string
    - _key:
        camel: Groups
        name: groups
        pascal: Groups
        snake: groups
      api_fieldname: groups
      description: A list of group IDs this API key belongs to.
      entity_fieldname: groups
      in: *id009
      items:
        type: string
      parameter_fieldname: groups
      required: false
      type: array
    - _key:
        camel: Owner
        name: owner
        pascal: Owner
        snake: owner
      api_fieldname: owner
      description: The owner of this API key, who is the creator by default.
      entity_fieldname: owner
      example: 01619571e2e89242ac12000600000000
      in: *id010
      parameter_fieldname: owner
      required: false
      type: string
    - _key:
        camel: Status
        name: status
        pascal: Status
        snake: status
      api_fieldname: status
      description: The status of the API key.
      entity_fieldname: status
      enum: *id011
      enum_reference:
        camel: apiKeyStatusEnum
        name: api_key_status_enum
        pascal: ApiKeyStatusEnum
        snake: api_key_status_enum
      example: ACTIVE
      in: *id012
      parameter_fieldname: status
      required: false
      type: string
    method: put
    mode: update
    operation_id: updateApiKey
    path: /v3/api-keys/{apiKey}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: apiKey
        name: api_key
        pascal: ApiKey
        snake: api_key
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Error in input data, for example missing display name.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: The API key with the specified ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Update API key details.
  - _key:
      camel: Delete
      name: delete
      pascal: Delete
      snake: delete
    description: "An endpoint for deleting the API key. \n\n**Example usage:**\n`curl\
      \ -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -H 'Authorization:\
      \ Bearer API_KEY'`"
    field_renames: []
    fields: []
    method: delete
    mode: delete
    operation_id: deleteApiKey
    path: /v3/api-keys/{apiKey}
    responses:
    - _key:
        camel: '204'
        name: '204'
        pascal: '204'
        snake: '204'
      description: Deleted successfully.
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: The API key with the specified ID does not exist.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Delete API key.
  - _key:
      camel: List
      name: list
      pascal: List
      snake: list
    description: "An endpoint for retrieving API keys in an array, optionally filtered\
      \ by the owner. \n\n**Example usage:**\n`curl https://api.us-east-1.mbedcloud.com/v3/api-keys\
      \ -H 'Authorization: Bearer API_KEY'`"
    field_renames: []
    fields:
    - _key:
        camel: Limit
        name: limit
        pascal: Limit
        snake: limit
      api_fieldname: limit
      default: 50
      description: The number of results to return (2-1000), default is 50.
      entity_fieldname: limit
      external_param: true
      format: int32
      in:
      - query
      name: limit
      parameter_fieldname: limit
      required: false
      type: integer
    - _key:
        camel: After
        name: after
        pascal: After
        snake: after
      api_fieldname: after
      description: The entity ID to fetch after the given one.
      entity_fieldname: after
      external_param: true
      in:
      - query
      name: after
      parameter_fieldname: after
      required: false
      type: string
    - _key:
        camel: Order
        name: order
        pascal: Order
        snake: order
      api_fieldname: order
      default: ASC
      description: The order of the records based on creation time, ASC or DESC; by
        default ASC
      entity_fieldname: order
      external_param: true
      in:
      - query
      name: order
      parameter_fieldname: order
      required: false
      type: string
    - _key:
        camel: Include
        name: include
        pascal: Include
        snake: include
      api_fieldname: include
      description: 'Comma separated additional data to return. Currently supported:
        total_count'
      entity_fieldname: include
      external_param: true
      in:
      - query
      name: include
      parameter_fieldname: include
      required: false
      type: string
    method: get
    mode: list
    operation_id: getAllApiKeys
    path: /v3/api-keys
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Successful operation.
      schema:
        paginate: true
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: 'Entity name: always ''list'''
          enum:
          - list
          type: string
        - _key:
            camel: Limit
            name: limit
            pascal: Limit
            snake: limit
          description: 'The number of results to return, (range: 2-1000), or equals
            to `total_count`'
          example: 50
          format: int32
          type: integer
        - _key:
            camel: After
            name: after
            pascal: After
            snake: after
          description: The entity ID to fetch after the given one.
          example: 01619571f3c00242ac12000600000000
          type: string
        - _key:
            camel: Order
            name: order
            pascal: Order
            snake: order
          description: 'The order of the records to return based on creation time.
            Available values: ASC, DESC; by default ASC.'
          enum:
          - ASC
          - DESC
          type: string
        - _key:
            camel: totalCount
            name: total_count
            pascal: TotalCount
            snake: total_count
          description: The total number or records, if requested. It might be returned
            also for small lists.
          example: 20
          format: int32
          type: integer
        - _key:
            camel: hasMore
            name: has_more
            pascal: HasMore
            snake: has_more
          description: Flag indicating whether there is more results.
          example: false
          type: boolean
        - _key:
            camel: Data
            name: data
            pascal: Data
            snake: data
          description: A list of entities.
          items:
          - _key:
              camel: foreignKey
              name: foreign_key
              pascal: ForeignKey
              snake: foreign_key
            camel: apiKey
            name: api_key
            pascal: ApiKey
            snake: api_key
          type: array
        required:
        - data
        - has_more
        - limit
        - object
        - total_count
        type: object
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    - _key:
        camel: '403'
        name: '403'
        pascal: '403'
        snake: '403'
      description: Forbidden.
      schema:
        description: This object represents an error message.
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: Entity name, always 'error'.
          enum: *id001
          type: string
        - _key:
            camel: Code
            name: code
            pascal: Code
            snake: code
          description: Response code.
          example: 400
          format: int32
          type: integer
        - _key:
            camel: Type
            name: type
            pascal: Type
            snake: type
          description: Error type.
          enum: *id002
          example: validation_error
          type: string
        - _key:
            camel: Message
            name: message
            pascal: Message
            snake: message
          description: A human readable message with detailed info.
          example: Validation error
          type: string
        - _key:
            camel: requestId
            name: request_id
            pascal: RequestId
            snake: request_id
          description: Request ID.
          example: 0161991d63150242ac12000600000000
          type: string
        - _key:
            camel: Fields
            name: fields
            pascal: Fields
            snake: fields
          description: Failed input fields during request object validation.
          items:
            properties:
            - _key:
                camel: Name
                name: name
                pascal: Name
                snake: name
              description: Name of the erroneous field.
              type: string
            - _key:
                camel: Message
                name: message
                pascal: Message
                snake: message
              description: Message describing the erroneous situation.
              type: string
            required: *id003
            type: object
          type: array
        required: *id004
        type: object
    summary: Get all API keys
  swagger_models:
  - ApiKeyInfoRespList
  - ApiKeyInfoResp
  - GroupSummaryList
  tags:
  - Developer
  - Developer
  - Developer
  - Developer
  - Developer
  - Developer
- _key:
    camel: PSK
    name: PSK
    pascal: PSK
    snake: psk
  fields:
  - _key:
      camel: endpointName
      name: endpoint_name
      pascal: EndpointName
      snake: endpoint_name
    description: The unique endpoint identifier that this pre-shared key applies to.
      16-64 [printable](https://en.wikipedia.org/wiki/ASCII#Printable_characters)
      (non-control) ASCII characters.
    example: my-endpoint-0001
    pattern: ^[ -~]{16,64}$
    type: string
  - _key:
      camel: createdAt
      name: created_at
      pascal: CreatedAt
      snake: created_at
    description: The date-time (RFC3339) when this pre-shared key was uploaded to
      Mbed Cloud.
    example: '2017-07-21T17:32:28.012Z'
    format: date-time
    type: string
  group_id:
    camel: PreSharedKeys
    name: PreSharedKeys
    pascal: PreSharedKeys
    snake: presharedkeys
  modes:
  - _key:
      camel: Create
      name: create
      pascal: Create
      snake: create
    description: "Upload a pre-shared key (PSK) for an endpoint to allow it to bootstrap.\
      \ The existing key will not be overwritten but needs\nto be deleted first in\
      \ case of re-setting PSK for an endpoint.\n\n**Note**: The PSK APIs are available\
      \ only to accounts that have this feature enabled.\n\n**Example usage:**\n\n\
      ```\ncurl -H \"authorization: Bearer ${API_TOKEN}\" -H \"content-type: application/json\"\
      \ -X POST https://api.us-east-1.mbedcloud.com/v2/device-shared-keys \\\n   \
      \  -d '{\"endpoint_name\": \"my-endpoint-0001\", \"secret_hex\": \"4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a\"\
      \ }'\n```\n"
    field_renames: []
    fields:
    - _key:
        camel: secretHex
        name: secret_hex
        pascal: SecretHex
        snake: secret_hex
      api_fieldname: secret_hex
      description: The secret of the pre-shared key in hexadecimal. It is not case
        sensitive; 4a is same as 4A, and it is allowed with or without 0x in the beginning.
        The minimum length of the secret is 128 bits and maximum 256 bits.
      entity_fieldname: secret_hex
      example: 4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a
      external_param: true
      in:
      - body
      name: secret_hex
      parameter_fieldname: secret_hex
      pattern: ^(0[xX])?[0-9a-fA-F]{32,64}$
      required: false
      schema_param: true
      type: string
    method: post
    mode: create
    operation_id: uploadPreSharedKey
    path: /v2/device-shared-keys
    responses:
    - _key:
        camel: '201'
        name: '201'
        pascal: '201'
        snake: '201'
      description: Successfully created.
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Bad request. Contains comma-separated errors INVALID_ENDPOINT_NAME,
        INVALID_SECRET_HEX and MALFORMED_JSON_CONTENT.
      schema:
        type: string
    - _key:
        camel: '409'
        name: '409'
        pascal: '409'
        snake: '409'
      description: Conflict. The pre-shared key for the endpoint already exists and
        will not be overwritten. Contains error KEY_ALREADY_EXISTS_FOR_ENDPOINT.
      schema:
        type: string
    summary: Upload a pre-shared key to Mbed Cloud.
  - _key:
      camel: Read
      name: read
      pascal: Read
      snake: read
    description: 'Check if a pre-shared key for an endpoint exists or not. The response
      does not contain the secret itself.


      **Example usage:**


      ```

      curl -H "authorization: Bearer ${API_TOKEN}" https://api.us-east-1.mbedcloud.com/v2/device-shared-keys/my-endpoint-0001

      ```

      '
    field_renames: []
    fields:
    - _key:
        camel: endpointName
        name: endpoint_name
        pascal: EndpointName
        snake: endpoint_name
      api_fieldname: endpoint_name
      description: The unique endpoint identifier that this pre-shared key applies
        to. 16-64 [printable](https://en.wikipedia.org/wiki/ASCII#Printable_characters)
        (non-control) ASCII characters.
      entity_fieldname: endpoint_name
      example: my-endpoint-0001
      in:
      - path
      parameter_fieldname: endpoint_name
      pattern: ^[ -~]{16,64}$
      required: true
      type: string
    method: get
    mode: read
    operation_id: getPreSharedKey
    path: /v2/device-shared-keys/{endpoint_name}
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: Pre-shared key for the device (does not contain secret).
      schema:
      - _key:
          camel: foreignKey
          name: foreign_key
          pascal: ForeignKey
          snake: foreign_key
        camel: PSK
        name: PSK
        pascal: PSK
        snake: psk
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Bad request. Endpoint name validation failed. Contains error INVALID_ENDPOINT_NAME.
      schema:
        type: string
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
    - _key:
        camel: '404'
        name: '404'
        pascal: '404'
        snake: '404'
      description: The pre-shared key does not exist.
    summary: Get a pre-shared key.
  - _key:
      camel: Delete
      name: delete
      pascal: Delete
      snake: delete
    description: 'Remove a pre-shared key.


      **Example usage:**


      ```

      curl -H "authorization: Bearer ${API_TOKEN}" -X DELETE https://api.us-east-1.mbedcloud.com/v2/device-shared-keys/my-endpoint-0001

      ```

      '
    field_renames: []
    fields: []
    method: delete
    mode: delete
    operation_id: deletePreSharedKey
    path: /v2/device-shared-keys/{endpoint_name}
    responses:
    - _key:
        camel: '204'
        name: '204'
        pascal: '204'
        snake: '204'
      description: Successfully deleted. Responded even if the endpoint did not have
        a PSK associated.
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Bad request. Endpoint name validation failed. Contains error INVALID_ENDPOINT_NAME.
      schema:
        type: string
    - _key:
        camel: '401'
        name: '401'
        pascal: '401'
        snake: '401'
      description: Authentication failure.
    summary: Remove a pre-shared key.
  - _key:
      camel: List
      name: list
      pascal: List
      snake: list
    description: 'List pre-shared keys with pagination and default page size of 50
      entries.


      **Example usage:**


      ```

      curl -H "authorization: Bearer ${API_TOKEN}" https://api.us-east-1.mbedcloud.com/v2/device-shared-keys

      ```

      '
    field_renames: []
    fields:
    - _key:
        camel: Limit
        name: limit
        pascal: Limit
        snake: limit
      api_fieldname: limit
      description: The number of entries per page
      entity_fieldname: limit
      external_param: true
      in:
      - query
      name: limit
      parameter_fieldname: limit
      required: false
      type: integer
    - _key:
        camel: After
        name: after
        pascal: After
        snake: after
      api_fieldname: after
      description: An offset token for fetching a specific page. Provided by the server.
      entity_fieldname: after
      external_param: true
      in:
      - query
      name: after
      parameter_fieldname: after
      required: false
      type: string
    method: get
    mode: list
    operation_id: listPreSharedKeys
    path: /v2/device-shared-keys
    responses:
    - _key:
        camel: '200'
        name: '200'
        pascal: '200'
        snake: '200'
      description: List of pre-shared keys.
      schema:
        properties:
        - _key:
            camel: Object
            name: object
            pascal: Object
            snake: object
          description: The type of this API object is a "list".
          example: list
          type: string
        - _key:
            camel: Limit
            name: limit
            pascal: Limit
            snake: limit
          description: The value of limit query parameter from the request, or default
            if not specified.
          example: 50
          type: integer
        - _key:
            camel: Order
            name: order
            pascal: Order
            snake: order
          description: The creation time based order of the entries.
          example: DESC
          type: string
        - _key:
            camel: hasMore
            name: has_more
            pascal: HasMore
            snake: has_more
          description: Are there more results available.
          example: true
          type: boolean
        - _key:
            camel: After
            name: after
            pascal: After
            snake: after
          description: An offset token for current page.
          example: 001e001000120010fac8f300487f11e8839a459edde8bd42f07fffffebf07fffffebb1219cc7862b64bbaf775dc545e274810004
          type: string
        - _key:
            camel: continuationMarker
            name: continuation_marker
            pascal: ContinuationMarker
            snake: continuation_marker
          description: An offset token for fetching the next page. Note that exactly
            the same limit needs to be used on the request for fetching the subsequent
            pages.
          example: 001e001000120010fac8f300487f11e8839a459edde8bd42f07fffffebf07fffffebb1219cc7862b64bbaf775dc545e274810005
          type: string
        - _key:
            camel: Data
            name: data
            pascal: Data
            snake: data
          description: Array of the pre-shared key entries. The array is empty if
            there are no pre-shared keys.
          items:
          - _key:
              camel: foreignKey
              name: foreign_key
              pascal: ForeignKey
              snake: foreign_key
            camel: PSK
            name: PSK
            pascal: PSK
            snake: psk
          minLength: 0
          type: array
        required:
        - object
        - limit
        - order
        - has_more
        - data
        type: object
    - _key:
        camel: '400'
        name: '400'
        pascal: '400'
        snake: '400'
      description: Bad request. Contains the error as a string, either TOKEN_NOT_FOUND
        or INVALID_LIMIT.
    summary: List pre-shared keys.
  swagger_models:
  - PreSharedKeyWithoutSecret
  - ListOfPreSharedKeysWithoutSecret
  tags:
  - PreSharedKeys
  - PreSharedKeys
  - PreSharedKeys
  - PreSharedKeys
enums:
- entity_name: account_group
  enum_name:
    camel: accountGroupTypeEnum
    name: account_group_type_enum
    pascal: AccountGroupTypeEnum
    snake: account_group_type_enum
  field_name: type
  group_id:
    camel: Developer
    name: Developer
    pascal: Developer
    snake: developer
  values:
  - success
- entity_name: user
  enum_name:
    camel: userStatusEnum
    name: user_status_enum
    pascal: UserStatusEnum
    snake: user_status_enum
  field_name: status
  group_id:
    camel: accountAdmin
    name: Account Admin
    pascal: AccountAdmin
    snake: account_admin
  values:
  - ACTIVE
  - ENROLLING
  - INACTIVE
  - INVITED
  - RESET
- entity_name: api_key
  enum_name:
    camel: apiKeyStatusEnum
    name: api_key_status_enum
    pascal: ApiKeyStatusEnum
    snake: api_key_status_enum
  field_name: status
  group_id:
    camel: Accounts
    name: Accounts
    pascal: Accounts
    snake: accounts
  values:
  - ACTIVE
  - INACTIVE
groups:
- camel: Developer
  name: Developer
  pascal: Developer
  snake: developer
- camel: accountAdmin
  name: Account Admin
  pascal: AccountAdmin
  snake: account_admin
- camel: Accounts
  name: Accounts
  pascal: Accounts
  snake: accounts
- camel: PreSharedKeys
  name: PreSharedKeys
  pascal: PreSharedKeys
  snake: presharedkeys
