/* 
 * mbed-billing REST API documentation for API-server
 *
 * This document contains the public REST API definitions of the mbed-billing service's API server component.
 *
 * OpenAPI spec version: 1.3.5-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace billing.Model
{
    /// <summary>
    /// ServiceTimeSeries
    /// </summary>
    [DataContract]
    public partial class ServiceTimeSeries :  IEquatable<ServiceTimeSeries>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceTimeSeries" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceTimeSeries() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceTimeSeries" /> class.
        /// </summary>
        /// <param name="TimeSeries">TimeSeries (required).</param>
        /// <param name="Service">Service (required).</param>
        public ServiceTimeSeries(List<TimeSeries> TimeSeries = default(List<TimeSeries>), string Service = default(string))
        {
            // to ensure "TimeSeries" is required (not null)
            if (TimeSeries == null)
            {
                throw new InvalidDataException("TimeSeries is a required property for ServiceTimeSeries and cannot be null");
            }
            else
            {
                this.TimeSeries = TimeSeries;
            }
            // to ensure "Service" is required (not null)
            if (Service == null)
            {
                throw new InvalidDataException("Service is a required property for ServiceTimeSeries and cannot be null");
            }
            else
            {
                this.Service = Service;
            }
        }
        
        /// <summary>
        /// Gets or Sets TimeSeries
        /// </summary>
        [DataMember(Name="time_series", EmitDefaultValue=false)]
        public List<TimeSeries> TimeSeries { get; set; }
        /// <summary>
        /// Gets or Sets Service
        /// </summary>
        [DataMember(Name="service", EmitDefaultValue=false)]
        public string Service { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ServiceTimeSeries {\n");
            sb.Append("  TimeSeries: ").Append(TimeSeries).Append("\n");
            sb.Append("  Service: ").Append(Service).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ServiceTimeSeries);
        }

        /// <summary>
        /// Returns true if ServiceTimeSeries instances are equal
        /// </summary>
        /// <param name="other">Instance of ServiceTimeSeries to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ServiceTimeSeries other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.TimeSeries == other.TimeSeries ||
                    this.TimeSeries != null &&
                    this.TimeSeries.SequenceEqual(other.TimeSeries)
                ) && 
                (
                    this.Service == other.Service ||
                    this.Service != null &&
                    this.Service.Equals(other.Service)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.TimeSeries != null)
                    hash = hash * 59 + this.TimeSeries.GetHashCode();
                if (this.Service != null)
                    hash = hash * 59 + this.Service.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
