general:
  artifacts:
    - ~/docs
    - ~/reports
machine:
  python:
    version: 3.6.2
  environment:
    PROJECT_TOP: ${HOME}/${CIRCLE_PROJECT_REPONAME}
    SDK_NAME: ${CIRCLE_PROJECT_REPONAME}
    SDK_DOCS: ${HOME}/docs
    SDK_REPORTS: ${HOME}/reports
    SDK_COVERAGE_REPORTS: ${SDK_REPORTS}/coverage
    UNITTEST_REPORT: ${SDK_REPORTS}/unittests.html
    INTTEST_REPORT: ${SDK_REPORTS}/inttests.html
    RAW_REPORT: ${SDK_REPORTS}/raw.txt
    ARTIFACTORY_URL: http://localhost:5000/artifactory/
    TESTRUNNER_DOCKER_IMAGE : 104059736540.dkr.ecr.us-west-2.amazonaws.com/mbed/sdk-testrunner:master
  services:
    - docker
checkout:
  post:
    # - python scripts/assert_news.py news/
    - git config --global user.name monty-bot
    - git config --global user.email monty-bot@arm.com
    - aws s3 sync s3://artifactory-store ${PROJECT_TOP}
    - docker build -t artifactory . :
        pwd: proxy
    - |
      login="$(aws ecr get-login)"
      ${login}
      login="$(aws ecr get-login --no-include-email)"
      ${login}
dependencies:
  pre:
    - docker pull ${TESTRUNNER_DOCKER_IMAGE}
    - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
    - sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
    - sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main" > /etc/apt/sources.list.d/dotnetdev.list'
    - sudo apt-get update
    - sudo apt-get install dotnet-sdk-2.1
    # Add artful repo to get latest doxygen
    - sudo apt-get install software-properties-common python-software-properties
    - sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ artful main"
    - sudo apt-get update
    - sudo apt-get install doxygen
    - mkdir -p ${SDK_DOCS}
    - mkdir -p ${SDK_REPORTS}
    - mkdir -p ${SDK_COVERAGE_REPORTS}
    - mkdir -p ${HOME}/rpc_fixtures
    - chmod -R 777 ${HOME}/rpc_fixtures
  post:
    - npm install -g codecov ansi-html-stream
compile:
  pre:
    # - python3 scripts/tpip.py
    # - cp tpip.csv ${SDK_REPORTS}
    - python scripts/dvcs_version.py
    - pip install towncrier==18.5.0
    - cd docs/news && towncrier --yes --name="" --version=$(python ../../scripts/dvcs_version.py version)
    - cp CHANGELOG.md ${CIRCLE_ARTIFACTS}/
  override:
    - dotnet build MbedCloudSDK -c Release
    - dotnet pack MbedCloudSDK -c Release --no-build --no-restore
    - dotnet build Tests/MbedCloudSDK.UnitTests
    - dotnet build Tests/MbedCloudSDK.IntegrationTests
test:
  override:
    - echo "<h1>${SDK_NAME} Unit Tests (build ${CIRCLE_BUILD_NUM})</h1>" >> ${UNITTEST_REPORT}
    - dotnet test Tests/MbedCloudSDK.UnitTests --no-build --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=opencover | ansi-html >> ${UNITTEST_REPORT}
    - codecov Tests/MbedCloudSDK.UnitTests/coverage.opencover.xml
    - cat ${UNITTEST_REPORT} | grep 'Total tests:' >> ${RAW_REPORT}
    - echo "<h1>${SDK_NAME} Integration Tests (build ${CIRCLE_BUILD_NUM})</h2>" >> ${INTTEST_REPORT}
    - set -o pipefail && bash scripts/test.sh 2>&1 | tee /dev/tty | ansi-html >> ${INTTEST_REPORT}
    - cat ${INTTEST_REPORT} | grep 'seconds ====' >> ${RAW_REPORT}
    - echo "finished"
  post:
    - echo "Generating documentation"
    - ./scripts/generate-docs.sh
    - docker run -d -p 5000:80 artifactory; sleep 10
deployment:
  master:
    branch: master
    commands:
      - echo "Uploading to latest"
      - aws s3 sync --delete --cache-control max-age=3600 ${SDK_DOCS} s3://mbed-cloud-sdk-dotnet-dist/latest/docs
      - aws s3 sync --delete --cache-control max-age=3600 ${SDK_REPORTS} s3://mbed-cloud-sdk-dotnet-dist/latest/reports
      - dotnet nuget push MbedCloudSDK/bin/Release/*.nupkg -k ${ARTIFACTORY_API_KEY} -s ${ARTIFACTORY_URL}/api/nuget/mbed-cloud-sdk-dotnet-snapshots
  release:
    branch: /[0-9]+\.[0-9]+.*/
    commands:
      - echo Tagging $SDK_NAME in GitHub...
      - git tag $(python ../../scripts/dvcs_version.py version)
      - git push --tags
      - git add CHANGELOG.md docs/news/*
      - git commit -m "Hear yea, hear yea. News O'Clock. [skip ci]"
      - git push --set-upstream origin 1.2
      - dotnet nuget push MbedCloudSDK/bin/Release/*.nupkg -k ${NUGET_KEY} -s https://api.nuget.org/v3/index.json
