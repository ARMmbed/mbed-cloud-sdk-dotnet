/* 
 * <auto-generated>
 * Connect API
 *
 * Mbed Cloud Connect API allows web applications to communicate with devices. You can subscribe to device resources and read/write values to them. mbed Cloud Connect makes connectivity to devices easy by queuing requests and caching resource values.
 *
 * OpenAPI spec version: 2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * </auto-generated>
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using mds.Client;
using mds.Api;
using mds.Model;

namespace mds.Test
{
    /// <summary>
    ///  Class for testing NotificationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class NotificationsApiTests
    {
        private NotificationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new NotificationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NotificationsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' NotificationsApi
            //Assert.IsInstanceOfType(typeof(NotificationsApi), instance, "instance is a NotificationsApi");
        }

        
        /// <summary>
        /// Test V2NotificationCallbackPut
        /// </summary>
        [Test]
        public void V2NotificationCallbackPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Webhook webhook = null;
            //instance.V2NotificationCallbackPut(webhook);
            
        }
        
        /// <summary>
        /// Test V2NotificationPullDelete
        /// </summary>
        [Test]
        public void V2NotificationPullDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.V2NotificationPullDelete();
            
        }
        
        /// <summary>
        /// Test V2NotificationPullGet
        /// </summary>
        [Test]
        public void V2NotificationPullGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.V2NotificationPullGet();
            //Assert.IsInstanceOf<NotificationMessage> (response, "response is NotificationMessage");
        }
        
    }

}
