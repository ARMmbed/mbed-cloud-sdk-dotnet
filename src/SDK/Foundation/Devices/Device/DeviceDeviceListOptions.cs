// <auto-generated>
//
// Generated by
//                     _                        _
//   /\/\   __ _ _ __ | |__   __ _ ___ ___  ___| |_
//  /    \ / _` | '_ \| '_ \ / _` / __/ __|/ _ \ __|
// / /\/\ \ (_| | | | | | | | (_| \__ \__ \  __/ |_
// \/    \/\__,_|_| |_|_| |_|\__,_|___/___/\___|\__| v 2.0.0
//
// <copyright file="DeviceDeviceListOptions.cs" company="Arm">
// Copyright (c) Arm. All rights reserved.
// </copyright>
// </auto-generated>

namespace Mbed.Cloud.Foundation
{
    using Mbed.Cloud.Common;
    using Mbed.Cloud.Common.Filters;
    using System.Collections.Generic;
    using System;
    using Mbed.Cloud.Foundation.Enums;

    /// <summary>
    /// DeviceDeviceListOptions
    /// </summary>
    public class DeviceDeviceListOptions : QueryOptions, IDeviceDeviceListOptions
    {
        public DeviceDeviceListOptions()
        {
            Filter = new Filter();
        }

        /// <summary>
        /// Filter object
        /// </summary>
        public Filter Filter
        {
            get;
            set;
        }

        public DeviceDeviceListOptions AccountIdEqualTo(string value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions AccountIdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions AccountIdIn(params string[] value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions AccountIdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("account_id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions AutoUpdateEqualTo(bool value)
        {
            this.Filter.AddFilterItem("auto_update", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions AutoUpdateNotEqualTo(bool value)
        {
            this.Filter.AddFilterItem("auto_update", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions BootstrapExpirationDateIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions BootstrapExpirationDateNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions BootstrapExpirationDateLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions BootstrapExpirationDateGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("bootstrap_expiration_date", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions BootstrappedTimestampIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions BootstrappedTimestampNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions BootstrappedTimestampLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions BootstrappedTimestampGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("bootstrapped_timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions CaIdEqualTo(string value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions CaIdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions CaIdIn(params string[] value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions CaIdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("ca_id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions ConnectorExpirationDateIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions ConnectorExpirationDateNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions ConnectorExpirationDateLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions ConnectorExpirationDateGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("connector_expiration_date", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions CreatedAtIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions CreatedAtNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions CreatedAtLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions CreatedAtGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions DeployedStateEqualTo(DeviceDeployedState value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions DeployedStateNotEqualTo(DeviceDeployedState value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions DeployedStateIn(params DeviceDeployedState[] value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions DeployedStateNotIn(params DeviceDeployedState[] value)
        {
            this.Filter.AddFilterItem("deployed_state", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions DeploymentEqualTo(string value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions DeploymentNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions DeploymentIn(params string[] value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions DeploymentNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("deployment", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions DescriptionEqualTo(string value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions DescriptionNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions DescriptionIn(params string[] value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions DescriptionNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions DeviceClassEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions DeviceClassNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions DeviceClassIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions DeviceClassNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions DeviceExecutionModeEqualTo(int value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions DeviceExecutionModeNotEqualTo(int value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions DeviceExecutionModeIn(params int[] value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions DeviceExecutionModeNotIn(params int[] value)
        {
            this.Filter.AddFilterItem("device_execution_mode", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions DeviceKeyEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions DeviceKeyNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions DeviceKeyIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions DeviceKeyNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_key", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions EndpointNameEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions EndpointNameNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions EndpointNameIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions EndpointNameNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_name", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions EndpointTypeEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions EndpointTypeNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions EndpointTypeIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions EndpointTypeNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("endpoint_type", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions EnrolmentListTimestampIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions EnrolmentListTimestampNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions EnrolmentListTimestampLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions EnrolmentListTimestampGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("enrolment_list_timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions FirmwareChecksumEqualTo(string value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions FirmwareChecksumNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions FirmwareChecksumIn(params string[] value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions FirmwareChecksumNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("firmware_checksum", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions HostGatewayEqualTo(string value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions HostGatewayNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions HostGatewayIn(params string[] value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions HostGatewayNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("host_gateway", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions IdEqualTo(string value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions IdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions IdIn(params string[] value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions IdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions ManifestEqualTo(string value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions ManifestNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions ManifestIn(params string[] value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions ManifestNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("manifest", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions ManifestTimestampIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions ManifestTimestampNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions ManifestTimestampLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions ManifestTimestampGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("manifest_timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions MechanismEqualTo(DeviceMechanism value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions MechanismNotEqualTo(DeviceMechanism value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions MechanismIn(params DeviceMechanism[] value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions MechanismNotIn(params DeviceMechanism[] value)
        {
            this.Filter.AddFilterItem("mechanism", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions MechanismUrlEqualTo(string value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions MechanismUrlNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions MechanismUrlIn(params string[] value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions MechanismUrlNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("mechanism_url", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions NameEqualTo(string value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions NameNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions NameIn(params string[] value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions NameNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions SerialNumberEqualTo(string value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions SerialNumberNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions SerialNumberIn(params string[] value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions SerialNumberNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("serial_number", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions StateEqualTo(DeviceState value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions StateNotEqualTo(DeviceState value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions StateIn(params DeviceState[] value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions StateNotIn(params DeviceState[] value)
        {
            this.Filter.AddFilterItem("state", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions UpdatedAtIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions UpdatedAtNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public DeviceDeviceListOptions UpdatedAtLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public DeviceDeviceListOptions UpdatedAtGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public DeviceDeviceListOptions VendorIdEqualTo(string value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public DeviceDeviceListOptions VendorIdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public DeviceDeviceListOptions VendorIdIn(params string[] value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public DeviceDeviceListOptions VendorIdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("vendor_id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }
    }
}