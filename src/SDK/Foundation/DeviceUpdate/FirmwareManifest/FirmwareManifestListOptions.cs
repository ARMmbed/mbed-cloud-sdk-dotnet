// <auto-generated>
//
// Generated by
//                     _                        _
//   /\/\   __ _ _ __ | |__   __ _ ___ ___  ___| |_
//  /    \ / _` | '_ \| '_ \ / _` / __/ __|/ _ \ __|
// / /\/\ \ (_| | | | | | | | (_| \__ \__ \  __/ |_
// \/    \/\__,_|_| |_|_| |_|\__,_|___/___/\___|\__| v 2.0.0
//
// <copyright file="FirmwareManifestListOptions.cs" company="Arm">
// Copyright (c) Arm. All rights reserved.
// </copyright>
// </auto-generated>

namespace Mbed.Cloud.Foundation
{
    using Mbed.Cloud.Common;
    using Mbed.Cloud.Common.Filters;
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// FirmwareManifestListOptions
    /// </summary>
    public class FirmwareManifestListOptions : QueryOptions, IFirmwareManifestListOptions
    {
        public FirmwareManifestListOptions()
        {
            Filter = new Filter();
        }

        /// <summary>
        /// Filter object
        /// </summary>
        public Filter Filter
        {
            get;
            set;
        }

        public FirmwareManifestListOptions CreatedAtIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions CreatedAtNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions CreatedAtLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public FirmwareManifestListOptions CreatedAtGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("created_at", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public FirmwareManifestListOptions DatafileUrlEqualTo(string value)
        {
            this.Filter.AddFilterItem("datafile_url", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public FirmwareManifestListOptions DatafileUrlNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("datafile_url", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public FirmwareManifestListOptions DatafileUrlIn(params string[] value)
        {
            this.Filter.AddFilterItem("datafile_url", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions DatafileUrlNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("datafile_url", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions DatafileSizeEqualTo(long value)
        {
            this.Filter.AddFilterItem("datafile_size", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public FirmwareManifestListOptions DatafileSizeNotEqualTo(long value)
        {
            this.Filter.AddFilterItem("datafile_size", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public FirmwareManifestListOptions DatafileSizeIn(params long[] value)
        {
            this.Filter.AddFilterItem("datafile_size", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions DatafileSizeNotIn(params long[] value)
        {
            this.Filter.AddFilterItem("datafile_size", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions DescriptionEqualTo(string value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public FirmwareManifestListOptions DescriptionNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public FirmwareManifestListOptions DescriptionIn(params string[] value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions DescriptionNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("description", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions DeviceClassEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public FirmwareManifestListOptions DeviceClassNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public FirmwareManifestListOptions DeviceClassIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions DeviceClassNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("device_class", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions IdEqualTo(string value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public FirmwareManifestListOptions IdNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public FirmwareManifestListOptions IdIn(params string[] value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions IdNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("id", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions NameEqualTo(string value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.Equals));
            return this;
        }

        public FirmwareManifestListOptions NameNotEqualTo(string value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.NotEqual));
            return this;
        }

        public FirmwareManifestListOptions NameIn(params string[] value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions NameNotIn(params string[] value)
        {
            this.Filter.AddFilterItem("name", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions TimestampIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("timestamp", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions TimestampNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("timestamp", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions TimestampLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("timestamp", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public FirmwareManifestListOptions TimestampGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("timestamp", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }

        public FirmwareManifestListOptions UpdatedAtIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.In));
            return this;
        }

        public FirmwareManifestListOptions UpdatedAtNotIn(params DateTime[] value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.NotIn));
            return this;
        }

        public FirmwareManifestListOptions UpdatedAtLessThan(DateTime value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.LessThan));
            return this;
        }

        public FirmwareManifestListOptions UpdatedAtGreaterThan(DateTime value)
        {
            this.Filter.AddFilterItem("updated_at", new FilterItem(value, FilterOperator.GreaterThan));
            return this;
        }
    }
}